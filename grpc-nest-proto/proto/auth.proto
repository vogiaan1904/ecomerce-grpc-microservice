syntax = "proto3";

package auth;

service AuthService {
  rpc Register(RegisterRequest) returns (RegisterResponse) {}
  rpc Login(LoginRequest) returns (LoginResponse) {}
  rpc Validate(ValidateRequest) returns (ValidateResponse) {}
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {}
  rpc SendVerificationEmail(SendVerificationEmailRequest)
      returns (SendVerificationEmailResponse) {}
  rpc ForgotPassword(ForgotPasswordRequest) returns (ForgotPasswordResponse) {}
  rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse) {}
}

enum ErrorCode {
  OK = 0;

  // Authentication errors (010100 - 010199)
  INVALID_CREDENTIALS = 100100;
  INVALID_TOKEN = 100101;
  TOKEN_EXPIRED = 100102;
  REFRESH_TOKEN_EXPIRED = 100103;
  TOKEN_NOT_FOUND = 100104;
  
  // Registration errors (010200 - 010299)
  EMAIL_ALREADY_EXISTS = 100200;
  INVALID_EMAIL_FORMAT = 100201;
  INVALID_PASSWORD_FORMAT = 100202;
  REGISTRATION_FAILED = 100203;
  
  // Verification errors (010300 - 010399)
  EMAIL_NOT_VERIFIED = 100300;
  VERIFICATION_TOKEN_EXPIRED = 100301;
  VERIFICATION_TOKEN_INVALID = 100302;
  
  // Password reset errors (010400 - 010499)
  RESET_TOKEN_EXPIRED = 100400;
  RESET_TOKEN_INVALID = 100401;
  PASSWORD_RESET_FAILED = 100402;
}

message Error {
  ErrorCode code = 1;
  string message = 2;
}

// Register
message RegisterRequest {
  reserved 5, 6, 7;
  string email = 1;
  string password = 2;
  string firstName = 3;
  string lastName = 4;
  string gender = 8;
}

message RegisterResponse {
  Error error = 1;
}

// Login
message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  Error error = 1;
  string accessToken = 2;
  string refreshToken = 3;
}

// Refresh token
message RefreshTokenRequest {
  string refreshToken = 1;
  string userId = 2;
}

message RefreshTokenResponse {
  Error error = 1;
  string accessToken = 2;
  string refreshToken = 3;
}

// Send verification email
message SendVerificationEmailRequest {
  string email = 1;
}

message SendVerificationEmailResponse {
  Error error = 1;
}

// Forgot password
message ForgotPasswordRequest {
  string email = 1;
}

message ForgotPasswordResponse {
  Error error = 1;
}

// Reset password
message ResetPasswordRequest {
  string token = 1;
  string password = 2;
}

message ResetPasswordResponse {
  Error error = 1;
}

// Validate
message ValidateRequest {
  string token = 1;
}

message ValidateResponse {
  Error error = 1;
  string userId = 2;
  string role = 3;
}